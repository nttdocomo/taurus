{
    "<p>A basic labeled form field</p>": "<p>A basic labeled form field</p>",
    "<p>The width of the {@link Label#fieldLabel} in pixels. Only applicable if {@link Label#labelAlign}\nis set to &quot;left&quot; or &quot;right&quot;.</p>": "<p>The width of the {@link Label#fieldLabel} in pixels. Only applicable if {@link Label#labelAlign}\nis set to &quot;left&quot; or &quot;right&quot;.</p>",
    "<p>Controls the position and alignment of the {@link Label#fieldLabel}. Valid values are:</p>\n<ul>\n<li><code>left</code> (the default) - The label is positioned to the left of the field, with its text aligned to the left. Its width is determined by the {@link Label#labelWidth} config.</li>\n<li><code>top</code> - The label is positioned above the field.</li>\n<li><code>right</code> - The label is positioned to the left of the field, with its text aligned to the right. Its width is determined by the {@link Label#labelWidth} config.</li>\n</ul>": "<p>Controls the position and alignment of the {@link Label#fieldLabel}. Valid values are:</p>\n<ul>\n<li><code>left</code> (the default) - The label is positioned to the left of the field, with its text aligned to the left. Its width is determined by the {@link Label#labelWidth} config.</li>\n<li><code>top</code> - The label is positioned above the field.</li>\n<li><code>right</code> - The label is positioned to the left of the field, with its text aligned to the right. Its width is determined by the {@link Label#labelWidth} config.</li>\n</ul>",
    "<p>The location where the error message text should display. Must be one of the following values:</p>": "<p>The location where the error message text should display. Must be one of the following values:</p>",
    "<ul>\n<li><code>title</code> Display the message in a default browser title attribute popup.</li>\n<li><code>under</code> Add a block div beneath the field containing the error message.</li>\n<li><code>side</code> Add an error icon to the right of the field, displaying the message in a popup on hover.</li>\n</ul>": "<ul>\n<li><code>title</code> Display the message in a default browser title attribute popup.</li>\n<li><code>under</code> Add a block div beneath the field containing the error message.</li>\n<li><code>side</code> Add an error icon to the right of the field, displaying the message in a popup on hover.</li>\n</ul>",
    "<p>Whether to adjust the component's body width to make room for 'side'\n{@link #msgTarget error messages}.</p>": "<p>Whether to adjust the component's body width to make room for 'side'\n{@link #msgTarget error messages}.</p>",
    "<p>Character(s) to be inserted at the end of the {@link Label#fieldLabel label text}. Set to empty string to hide the separator completely.</p>": "<p>Character(s) to be inserted at the end of the {@link Label#fieldLabel label text}. Set to empty string to hide the separator completely.</p>",
    "<p>The label for the field. It gets appended with the {@link Label#labelSeparator}, and its position and sizing is</p>": "<p>The label for the field. It gets appended with the {@link Label#labelSeparator}, and its position and sizing is</p>",
    "<p>determined by the {@link Label#labelAlign} and {@link Label#labelWidth} configs.</p>": "<p>determined by the {@link Label#labelAlign} and {@link Label#labelWidth} configs.</p>",
    "<p>The CSS class to use when marking the component invalid.</p>": "<p>The CSS class to use when marking the component invalid.</p>",
    "<p>Tells whether the field currently has an active error message. This does not trigger validation on its own, it\nmerely looks for any message that the component may already hold.</p>": "<p>Tells whether the field currently has an active error message. This does not trigger validation on its own, it\nmerely looks for any message that the component may already hold.</p>",
    "<p>Gets an Array of any active error messages currently applied to the field. This does not trigger validation on\nits own, it merely returns any messages that the component may already hold.</p>": "<p>Gets an Array of any active error messages currently applied to the field. This does not trigger validation on\nits own, it merely returns any messages that the component may already hold.</p>",
    "<p>The active error messages on the component; if there are no errors, an empty Array is\nreturned.</p>": "<p>The active error messages on the component; if there are no errors, an empty Array is\nreturned.</p>",
    "<p>Returns the label for the field. Defaults to simply returning the {@link #fieldLabel} config. Can be overridden\nto provide a custom generated label.</p>": "<p>Returns the label for the field. Defaults to simply returning the {@link #fieldLabel} config. Can be overridden\nto provide a custom generated label.</p>",
    "<p>The configured field label, or empty string if not defined</p>": "<p>The configured field label, or empty string if not defined</p>",
    "<p>Returns the trimmed label by slicing off the label separator character. Can be overridden.</p>": "<p>Returns the trimmed label by slicing off the label separator character. Can be overridden.</p>",
    "<p>The trimmed field label, or empty string if not defined</p>": "<p>The trimmed field label, or empty string if not defined</p>"
}