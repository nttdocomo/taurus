{
    "<p>A namespace.</p>": "<p>A namespace.</p>",
    "<p>The name of the field. This is used as the parameter name when including the field value\nin a {@link Ext.form.Basic#submit form submit()}. If no name is configured, it falls back to the {@link Base#inputId}.\nTo prevent the field from being included in the form submit, set {@link Base#submitValue} to false.</p>": "<p>The name of the field. This is used as the parameter name when including the field value\nin a {@link Ext.form.Basic#submit form submit()}. If no name is configured, it falls back to the {@link Base#inputId}.\nTo prevent the field from being included in the form submit, set {@link Base#submitValue} to false.</p>",
    "<p>Base class for form fields that provides default event handling, rendering, and other common functionality\nneeded by all form field types.</p>": "<p>Base class for form fields that provides default event handling, rendering, and other common functionality\nneeded by all form field types.</p>",
    "<p>The id that will be given to the generated input DOM element. Defaults to an automatically generated id. If you\nconfigure this manually, you must make sure it is unique in the document.</p>": "<p>The id that will be given to the generated input DOM element. Defaults to an automatically generated id. If you\nconfigure this manually, you must make sure it is unique in the document.</p>",
    "<p>Sets a data value into the field and runs the change detection and validation. To set the value directly\nwithout these inspections see {@link #setRawValue}.</p>": "<p>Sets a data value into the field and runs the change detection and validation. To set the value directly\nwithout these inspections see {@link #setRawValue}.</p>",
    "<p>The value to set</p>": "<p>The value to set</p>",
    "<p>Resets the current field value to the originally loaded value and clears any validation messages. See {@link\nExt.form.Basic}.{@link Ext.form.Basic#trackResetOnLoad trackResetOnLoad}</p>": "<p>Resets the current field value to the originally loaded value and clears any validation messages. See {@link\nExt.form.Basic}.{@link Ext.form.Basic#trackResetOnLoad trackResetOnLoad}</p>",
    "<p>Template method before a field is reset.</p>": "<p>Template method before a field is reset.</p>",
    "<p>Converts a mixed-type value to a raw representation suitable for displaying in the field. This allows controlling\nhow value objects passed to {@link #setValue} are shown to the user, including localization. For instance, for a\n{@link Ext.form.field.Date}, this would control how a Date object passed to {@link #setValue} would be converted\nto a String for display in the field.</p>\n<p>See {@link #rawToValue} for the opposite conversion.</p>\n<p>The base implementation simply does a standard toString conversion, and converts {@link Ext#isEmpty empty values}\nto an empty string.</p>": "<p>Converts a mixed-type value to a raw representation suitable for displaying in the field. This allows controlling\nhow value objects passed to {@link #setValue} are shown to the user, including localization. For instance, for a\n{@link Ext.form.field.Date}, this would control how a Date object passed to {@link #setValue} would be converted\nto a String for display in the field.</p>\n<p>See {@link #rawToValue} for the opposite conversion.</p>\n<p>The base implementation simply does a standard toString conversion, and converts {@link Ext#isEmpty empty values}\nto an empty string.</p>",
    "<p>The mixed-type value to convert to the raw representation.</p>": "<p>The mixed-type value to convert to the raw representation.</p>",
    "<p>The converted raw value.</p>": "<p>The converted raw value.</p>",
    "<p>Returns the input id for this field. If none was specified via the {@link #inputId} config, then an id will be\nautomatically generated.</p>": "<p>Returns the input id for this field. If none was specified via the {@link #inputId} config, then an id will be\nautomatically generated.</p>",
    "<p>Gets the markup to be inserted into the outer template's bodyEl. For fields this is the actual input element.</p>": "<p>Gets the markup to be inserted into the outer template's bodyEl. For fields this is the actual input element.</p>",
    "<p>Creates and returns the data object to be used when rendering the {@link #fieldSubTpl}.</p>": "<p>Creates and returns the data object to be used when rendering the {@link #fieldSubTpl}.</p>",
    "<p>The template data</p>": "<p>The template data</p>"
}